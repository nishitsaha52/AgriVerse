{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nishi\\\\Desktop\\\\Agriculture\\\\client\\\\src\\\\components\\\\PlantDiseaseUpload.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/PlantDiseaseUpload.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlantDiseaseUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [prediction, setPrediction] = useState(\"\");\n  const [confidence, setConfidence] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleUpload = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    setLoading(true);\n    setPrediction(\"\");\n    setConfidence(null);\n    try {\n      const res = await axios.post('http://localhost:5000/predict', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(\"Backend response:\", res.data);\n      setPrediction(res.data.predicted_class);\n      setConfidence(res.data.confidence);\n    } catch (err) {\n      console.error(\"Prediction error:\", err);\n      setPrediction(\"Error predicting disease\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.card,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.title,\n      children: \"\\uD83D\\uDCF8 Upload Leaf Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0]),\n      style: styles.fileInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: styles.button,\n      children: \"Upload & Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.loading,\n      children: \"\\uD83D\\uDD04 Analyzing image...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this), !loading && prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.result,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.resultHeader,\n        children: \"\\uD83E\\uDDEA Prediction Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Disease:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 14\n        }, this), \" \", prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), confidence !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Confidence:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this), \" \", confidence.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(PlantDiseaseUpload, \"2sJvt3zZsXeUfvvQyx9NtT99fAE=\");\n_c = PlantDiseaseUpload;\nconst styles = {\n  card: {\n    margin: '0 auto',\n    padding: '30px',\n    maxWidth: '500px',\n    backgroundColor: '#ffffff',\n    borderRadius: '12px',\n    boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\n    textAlign: 'center'\n  },\n  title: {\n    marginBottom: '20px',\n    color: '#388E3C'\n  },\n  fileInput: {\n    marginBottom: '20px'\n  },\n  button: {\n    padding: '10px 20px',\n    fontSize: '16px',\n    backgroundColor: '#4CAF50',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '8px',\n    cursor: 'pointer'\n  },\n  loading: {\n    marginTop: '20px',\n    color: '#888',\n    fontStyle: 'italic'\n  },\n  result: {\n    marginTop: '30px',\n    backgroundColor: '#f1f8e9',\n    padding: '15px',\n    borderRadius: '8px'\n  },\n  resultHeader: {\n    marginBottom: '10px',\n    color: '#2E7D32'\n  }\n};\nexport default PlantDiseaseUpload;\nvar _c;\n$RefreshReg$(_c, \"PlantDiseaseUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PlantDiseaseUpload","_s","file","setFile","prediction","setPrediction","confidence","setConfidence","loading","setLoading","handleUpload","formData","FormData","append","res","post","headers","console","log","data","predicted_class","err","error","style","styles","card","children","title","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","fileInput","onClick","button","result","resultHeader","toFixed","_c","margin","padding","maxWidth","backgroundColor","borderRadius","boxShadow","textAlign","marginBottom","color","fontSize","border","cursor","marginTop","fontStyle","$RefreshReg$"],"sources":["C:/Users/nishi/Desktop/Agriculture/client/src/components/PlantDiseaseUpload.js"],"sourcesContent":["// frontend/src/components/PlantDiseaseUpload.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction PlantDiseaseUpload() {\n  const [file, setFile] = useState(null);\n  const [prediction, setPrediction] = useState(\"\");\n  const [confidence, setConfidence] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleUpload = async () => {\n    if (!file) return;\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    setLoading(true);\n    setPrediction(\"\");\n    setConfidence(null);\n\n    try {\n      const res = await axios.post('http://localhost:5000/predict', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      console.log(\"Backend response:\", res.data);\n\n      setPrediction(res.data.predicted_class);\n      setConfidence(res.data.confidence);\n    } catch (err) {\n      console.error(\"Prediction error:\", err);\n      setPrediction(\"Error predicting disease\");\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div style={styles.card}>\n      <h2 style={styles.title}>ðŸ“¸ Upload Leaf Image</h2>\n      <input\n        type=\"file\"\n        onChange={(e) => setFile(e.target.files[0])}\n        style={styles.fileInput}\n      />\n      <button onClick={handleUpload} style={styles.button}>\n        Upload & Predict\n      </button>\n\n      {loading && <p style={styles.loading}>ðŸ”„ Analyzing image...</p>}\n\n      {!loading && prediction && (\n        <div style={styles.result}>\n          <h3 style={styles.resultHeader}>ðŸ§ª Prediction Result</h3>\n          <p><strong>Disease:</strong> {prediction}</p>\n          {confidence !== null && (\n            <p><strong>Confidence:</strong> {confidence.toFixed(2)}%</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst styles = {\n  card: {\n    margin: '0 auto',\n    padding: '30px',\n    maxWidth: '500px',\n    backgroundColor: '#ffffff',\n    borderRadius: '12px',\n    boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\n    textAlign: 'center',\n  },\n  title: {\n    marginBottom: '20px',\n    color: '#388E3C',\n  },\n  fileInput: {\n    marginBottom: '20px',\n  },\n  button: {\n    padding: '10px 20px',\n    fontSize: '16px',\n    backgroundColor: '#4CAF50',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '8px',\n    cursor: 'pointer',\n  },\n  loading: {\n    marginTop: '20px',\n    color: '#888',\n    fontStyle: 'italic',\n  },\n  result: {\n    marginTop: '30px',\n    backgroundColor: '#f1f8e9',\n    padding: '15px',\n    borderRadius: '8px',\n  },\n  resultHeader: {\n    marginBottom: '10px',\n    color: '#2E7D32',\n  },\n};\n\nexport default PlantDiseaseUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}