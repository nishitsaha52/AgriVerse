{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nishi\\\\Desktop\\\\Agriculture\\\\client\\\\src\\\\components\\\\CropRecommendation.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CropRecommendation() {\n  _s();\n  const [soilType, setSoilType] = useState('');\n  const [temperature, setTemperature] = useState('');\n  const [rainfall, setRainfall] = useState('');\n  const [month, setMonth] = useState('');\n  const [recommendation, setRecommendation] = useState('');\n  const handleSubmit = async () => {\n    try {\n      const res = await axios.post('http://localhost:5002/recommend-crop', {\n        soil_type: soilType,\n        temperature,\n        rainfall,\n        month\n      });\n      setRecommendation(res.data.recommended_crop);\n    } catch (error) {\n      console.error('Error recommending crop:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDF31 Crop Recommendation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Soil Type\",\n      onChange: e => setSoilType(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Temperature (\\xB0C)\",\n      onChange: e => setTemperature(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Rainfall (mm)\",\n      onChange: e => setRainfall(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Month (1-12)\",\n      onChange: e => setMonth(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Get Crop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), recommendation && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Recommended Crop: \", recommendation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(CropRecommendation, \"uOZC0Fiv3Uc+Y27wLMC9oxlobKo=\");\n_c = CropRecommendation;\nexport default CropRecommendation;\nvar _c;\n$RefreshReg$(_c, \"CropRecommendation\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CropRecommendation","_s","soilType","setSoilType","temperature","setTemperature","rainfall","setRainfall","month","setMonth","recommendation","setRecommendation","handleSubmit","res","post","soil_type","data","recommended_crop","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nishi/Desktop/Agriculture/client/src/components/CropRecommendation.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction CropRecommendation() {\n  const [soilType, setSoilType] = useState('');\n  const [temperature, setTemperature] = useState('');\n  const [rainfall, setRainfall] = useState('');\n  const [month, setMonth] = useState('');\n  const [recommendation, setRecommendation] = useState('');\n\n  const handleSubmit = async () => {\n    try {\n      const res = await axios.post('http://localhost:5002/recommend-crop', {\n        soil_type: soilType,\n        temperature,\n        rainfall,\n        month,\n      });\n      setRecommendation(res.data.recommended_crop);\n    } catch (error) {\n      console.error('Error recommending crop:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>ðŸŒ± Crop Recommendation</h2>\n      <input placeholder=\"Soil Type\" onChange={(e) => setSoilType(e.target.value)} />\n      <input placeholder=\"Temperature (Â°C)\" onChange={(e) => setTemperature(e.target.value)} />\n      <input placeholder=\"Rainfall (mm)\" onChange={(e) => setRainfall(e.target.value)} />\n      <input placeholder=\"Month (1-12)\" onChange={(e) => setMonth(e.target.value)} />\n      <button onClick={handleSubmit}>Get Crop</button>\n      {recommendation && <h3>Recommended Crop: {recommendation}</h3>}\n    </div>\n  );\n}\n\nexport default CropRecommendation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}