{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nishi\\\\Desktop\\\\Agriculture\\\\client\\\\src\\\\components\\\\PlantDiseaseUpload.js\",\n  _s = $RefreshSig$();\n//frontend/src/components/PlantDiseaseUpload.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlantDiseaseUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [prediction, setPrediction] = useState(\"\");\n  const [confidence, setConfidence] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleUpload = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    setLoading(true);\n    setPrediction(\"\");\n    setConfidence(null);\n    try {\n      const res = await axios.post('http://localhost:5000/predict', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(\"Backend response:\", res.data);\n\n      // âœ… Correct key names\n      setPrediction(res.data.predicted_class);\n      setConfidence(res.data.confidence);\n    } catch (err) {\n      console.error(\"Prediction error:\", err);\n      setPrediction(\"Error predicting disease\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-form\",\n    style: {\n      padding: '20px',\n      maxWidth: '500px'\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDF3F Plant Disease Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 87\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 123\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload & Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 190\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }, this), !loading && prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Prediction Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Disease:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 10\n        }, this), \" \", prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), confidence !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Confidence:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 12\n        }, this), \" \", confidence.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n}\n_s(PlantDiseaseUpload, \"2sJvt3zZsXeUfvvQyx9NtT99fAE=\");\n_c = PlantDiseaseUpload;\nexport default PlantDiseaseUpload;\nvar _c;\n$RefreshReg$(_c, \"PlantDiseaseUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PlantDiseaseUpload","_s","file","setFile","prediction","setPrediction","confidence","setConfidence","loading","setLoading","handleUpload","formData","FormData","append","res","post","headers","console","log","data","predicted_class","err","error","className","style","padding","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","onClick","marginTop","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/nishi/Desktop/Agriculture/client/src/components/PlantDiseaseUpload.js"],"sourcesContent":["//frontend/src/components/PlantDiseaseUpload.js\n\nimport React, { useState } from 'react'; import axios from 'axios';\n\nfunction PlantDiseaseUpload() { const [file, setFile] = useState(null); const [prediction, setPrediction] = useState(\"\"); const [confidence, setConfidence] = useState(null); const [loading, setLoading] = useState(false);\n\nconst handleUpload = async () => { if (!file) return;\n\nconst formData = new FormData();\nformData.append('file', file);\n\nsetLoading(true);\nsetPrediction(\"\");\nsetConfidence(null);\n\ntry {\n  const res = await axios.post('http://localhost:5000/predict', formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  });\n  console.log(\"Backend response:\", res.data);\n\n  // âœ… Correct key names\n  setPrediction(res.data.predicted_class);\n  setConfidence(res.data.confidence);\n} catch (err) {\n  console.error(\"Prediction error:\", err);\n  setPrediction(\"Error predicting disease\");\n}\nsetLoading(false);\n};\n\nreturn ( <div className=\"upload-form\" style={{ padding: '20px', maxWidth: '500px' }}> <h2>ðŸŒ¿ Plant Disease Detection</h2> <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} /> <button onClick={handleUpload}>Upload & Predict</button>\n\n  {loading && <p>Loading...</p>}\n\n  {!loading && prediction && (\n    <div style={{ marginTop: '20px' }}>\n      <h3>Prediction Result</h3>\n      <p><strong>Disease:</strong> {prediction}</p>\n      {confidence !== null && (\n        <p><strong>Confidence:</strong> {confidence.toFixed(2)}%</p>\n      )}\n    </div>\n  )}\n</div>\n); }\n\nexport default PlantDiseaseUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}