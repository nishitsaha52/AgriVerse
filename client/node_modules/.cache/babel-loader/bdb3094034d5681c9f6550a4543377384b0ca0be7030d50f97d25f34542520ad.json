{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nishi\\\\Desktop\\\\Agriculture\\\\client\\\\src\\\\components\\\\PlantDiseaseUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlantDiseaseUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [prediction, setPrediction] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleUpload = async () => {\n    if (!file) return;\n    javascript;\n    Copy;\n    Edit;\n    const formData = new FormData();\n    formData.append('file', file);\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:5000/predict', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(\"Backend response:\", res.data); // âœ… Debug output\n      setPrediction(res.data.prediction);\n    } catch (err) {\n      console.error(\"Prediction error:\", err);\n      setPrediction(\"Error predicting disease\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-form\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDF3F Plant Disease Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 40\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 76\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload & Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 143\n    }, this), \"php-template Copy Edit\", loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this), !loading && prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Prediction:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          background: '#f4f4f4',\n          padding: '10px',\n          borderRadius: '5px'\n        },\n        children: JSON.stringify(prediction, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n_s(PlantDiseaseUpload, \"qivgZqLaYkERS6Xs2ioMcx6nu3M=\");\n_c = PlantDiseaseUpload;\nexport default PlantDiseaseUpload;\nvar _c;\n$RefreshReg$(_c, \"PlantDiseaseUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PlantDiseaseUpload","_s","file","setFile","prediction","setPrediction","loading","setLoading","handleUpload","javascript","Copy","Edit","formData","FormData","append","res","post","headers","console","log","data","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","onClick","style","marginTop","background","padding","borderRadius","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/nishi/Desktop/Agriculture/client/src/components/PlantDiseaseUpload.js"],"sourcesContent":["import React, { useState } from 'react'; import axios from 'axios';\n\nfunction PlantDiseaseUpload() { const [file, setFile] = useState(null); const [prediction, setPrediction] = useState(\"\"); const [loading, setLoading] = useState(false);\n\nconst handleUpload = async () => { if (!file) return;\n\njavascript\nCopy\nEdit\nconst formData = new FormData();\nformData.append('file', file);\n\nsetLoading(true);\ntry {\n  const res = await axios.post('http://localhost:5000/predict', formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  });\n  console.log(\"Backend response:\", res.data); // âœ… Debug output\n  setPrediction(res.data.prediction);\n} catch (err) {\n  console.error(\"Prediction error:\", err);\n  setPrediction(\"Error predicting disease\");\n}\nsetLoading(false);\n};\n\nreturn ( <div className=\"upload-form\"> <h2>ðŸŒ¿ Plant Disease Detection</h2> <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} /> <button onClick={handleUpload}>Upload & Predict</button>\n\nphp-template\nCopy\nEdit\n  {loading && <p>Loading...</p>}\n\n  {!loading && prediction && (\n    <div style={{ marginTop: '20px' }}>\n      <h3>Prediction:</h3>\n      <pre style={{ background: '#f4f4f4', padding: '10px', borderRadius: '5px' }}>\n        {JSON.stringify(prediction, null, 2)}\n      </pre>\n    </div>\n  )}\n</div>\n); }\n\nexport default PlantDiseaseUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}